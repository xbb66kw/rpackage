% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/RDD.R
\docType{methods}
\name{partitionBy}
\alias{partitionBy}
\alias{partitionBy,RDD,integer-method}
\title{Partition an RDD by key}
\usage{
partitionBy(rdd, numPartitions, ...)

\S4method{partitionBy}{RDD,integer}(rdd, numPartitions,
  partitionFunc = hashCode)
}
\arguments{
\item{rdd}{The RDD to partition. Should be an RDD where each element is
list(K, V) or c(K, V).}

\item{numPartitions}{Number of partitions to create.}

\item{...}{Other optional arguments to partitionBy.}

\item{partitionFunc}{The partition function to use. Uses a default hashCode
function if not provided}
}
\value{
An RDD partitioned using the specified partitioner.
}
\description{
This function operates on RDDs where every element is of the form list(K, V) or c(K, V).
For each element of this RDD, the partitioner is used to compute a hash
function and the RDD is partitioned using this hash value.
}
\examples{
\dontrun{
sc <- sparkR.init()
pairs <- list(list(1, 2), list(1.1, 3), list(1, 4))
rdd <- parallelize(sc, pairs)
parts <- partitionBy(rdd, 2L)
collectPartition(parts, 0L) # First partition should contain list(1, 2) and list(1, 4)
}
}

